apply plugin: 'idea'
apply plugin: 'groovy'
apply plugin: 'nexus'
apply plugin: 'codenarc'

def compatibilityVersion = 1.5
sourceCompatibility = compatibilityVersion
targetCompatibility = compatibilityVersion
group = 'org.gradle.api.plugins'
version = '0.3'

buildscript {
	repositories {
		mavenCentral()
	}

	dependencies {
		classpath 'org.gradle.api.plugins:gradle-nexus-plugin:0.1'
	}
}

repositories {
	mavenCentral()
}

dependencies {
	groovy localGroovy()
	compile gradleApi(), 'org.gradle.api.plugins:gradle-gae-plugin:0.7.5',
			'org.codehaus.geb:geb-core:0.7.0'
	testCompile('org.spockframework:spock-core:0.6-groovy-1.8') {
		exclude group: 'org.codehaus.groovy', module: 'groovy-all'
	}
	codenarc 'org.codenarc:CodeNarc:0.17'
}

idea.project {
	jdkName = '1.6'

	ipr.withXml { provider ->
		def node = provider.asNode()

		// Use GIT
		def vcsConfig = node.component.find { it.'@name' == 'VcsDirectoryMappings' }
		vcsConfig.mapping[0].'@vcs' = 'Git'

		// Set Gradle home
		def gradleSettings = node.appendNode('component', [name: 'GradleSettings'])
		gradleSettings.appendNode('option', [name: 'SDK_HOME', value: gradle.gradleHomeDir])
	}
}

jar {
	manifest {
		attributes 'Implementation-Title': 'Gradle GAE Geb integration plugin',
				'Implementation-Version': version,
				'Built-By': System.getProperty('user.name'),
				'Built-Date': new Date(),
				'Built-JDK': System.getProperty('java.version'),
				'Built-Gradle': gradle.gradleVersion
	}
}

modifyPom {
	project {
		name 'Gradle GAE Geb integration plugin'
		description 'Simple Gradle plugin that provides integration between Gradle GAE plugin and Geb browser automation framework.'
		url 'https://github.com/erdi/gradle-gae-geb-plugin'
		inceptionYear '2012'

		scm {
			url 'https://github.com/erdi/gradle-gae-geb-plugin'
			connection 'scm:git://github.com/erdi/gradle-gae-geb-plugin.git'
			developerConnection 'scm:git@github.com:erdi/gradle-gae-geb-plugin.git'
		}

		licenses {
			license {
				name 'The Apache Software License, Version 2.0'
				url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
				distribution 'repo'
			}
		}

		developers {
			developer {
				id 'erdi'
				name 'Marcin Erdmann'
				email 'marcin.erdmann@proxerd.pl'
			}
		}
	}
	dependencies.findAll { it.groupId == 'org.gradle.api.plugins' && it.artifactId == 'gradle-gae-plugin' }*.scope = 'provided'
	dependencies.removeAll(dependencies.findAll { it.scope == 'test' })
}

codenarc {
	configFile = file('config/codenarc/rulesets.groovy')
}
